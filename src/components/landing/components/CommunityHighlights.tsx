
import { motion } from "framer-motion";
import { Users, Award, TrendingUp } from "lucide-react";
import { AnimatedCounter } from "./AnimatedCounter";

const stats = [
  {
    icon: Users,
    value: 50000,
    suffix: "+",
    label: "Active Creators",
    description: "Joined our thriving community"
  },
  {
    icon: TrendingUp,
    value: 2,
    prefix: "$",
    suffix: "M+",
    label: "Monthly Earnings",
    description: "Generated by our creators"
  },
  {
    icon: Award,
    value: 95,
    suffix: "%",
    label: "Success Rate",
    description: "For dedicated creators"
  }
];

export const CommunityHighlights = () => {
  return (
    <section className="py-20 relative overflow-hidden">
      <div className="container mx-auto px-4">
        {/* Section heading */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.7 }}
          className="text-center mb-16"
        >
          <h2 className="text-3xl md:text-4xl lg:text-5xl font-display font-bold mb-4">
            Our <span className="gradient-text">Community</span> in Numbers
          </h2>
          <p className="text-luxury-neutral/80 max-w-2xl mx-auto text-lg">
            Join thousands of creators already thriving on our platform
          </p>
        </motion.div>
        
        <div className="grid md:grid-cols-3 gap-8">
          {stats.map((stat, index) => (
            <motion.div
              key={stat.label}
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.5, delay: index * 0.2 }}
              className="premium-card p-8 group"
            >
              {/* Glass glow effect */}
              <div className="absolute inset-0 bg-luxury-primary/5 opacity-0 group-hover:opacity-100 transition-opacity duration-700 blur-xl rounded-xl" />
              
              <div className="flex flex-col items-center text-center relative">
                <motion.div
                  className="flex items-center justify-center w-20 h-20 rounded-full bg-luxury-primary/10 mb-6 group-hover:scale-110 transition-transform duration-500"
                  whileHover={{ rotate: [0, 10, -10, 0] }}
                  transition={{ duration: 0.5 }}
                >
                  <stat.icon className="w-10 h-10 text-luxury-primary" />
                </motion.div>
                
                <motion.h3 
                  className="text-5xl font-bold mb-3 font-display bg-clip-text text-transparent bg-gradient-to-r from-white via-luxury-neutral to-white"
                  initial={{ scale: 0.5 }}
                  whileInView={{ scale: 1 }}
                  transition={{ duration: 0.5, delay: index * 0.2 + 0.3 }}
                >
                  <AnimatedCounter 
                    endValue={stat.value} 
                    prefix={stat.prefix} 
                    suffix={stat.suffix} 
                    duration={2500}
                  />
                </motion.h3>
                
                <p className="text-xl font-display font-semibold mb-3 gradient-text">{stat.label}</p>
                <p className="text-luxury-neutral/80">{stat.description}</p>
                
                {/* Animated highlight line */}
                <motion.div 
                  className="absolute -bottom-8 left-0 w-full h-0.5 bg-gradient-to-r from-transparent via-luxury-primary/50 to-transparent"
                  initial={{ scaleX: 0 }}
                  whileInView={{ scaleX: 1 }}
                  transition={{ duration: 0.8, delay: index * 0.2 + 0.5 }}
                />
              </div>
            </motion.div>
          ))}
        </div>
      </div>
      
      {/* Background decorative elements */}
      <div className="absolute -top-40 -right-40 w-96 h-96 bg-luxury-primary/10 rounded-full blur-[100px] opacity-30" />
      <div className="absolute -bottom-40 -left-40 w-96 h-96 bg-luxury-accent/10 rounded-full blur-[100px] opacity-30" />
    </section>
  );
};
